import dotenv from 'dotenv';
dotenv.config();

import { Client, GatewayIntentBits } from 'discord.js';
import { config } from './config/config';
import { CommandHandler } from './handlers/CommandHandler';
import { EventHandler } from './handlers/EventHandler';
import { loadCronJobs } from './services/cronService';
import { sequelize } from './database/sequelize';
import {initDatabase} from "./database/database";
export class Bot {
    private readonly client: Client;
    private readonly commandHandler: CommandHandler;
    private readonly eventHandler: EventHandler;
    private readonly dbName: string;

    constructor() {
        if (!process.env.DB_NAME) {
            console.error("‚ùå ERREUR : La variable d'environnement DB_NAME est manquante.");
            process.exit(1);
        }
        this.dbName = process.env.DB_NAME;

        this.client = new Client({
            intents: [GatewayIntentBits.Guilds, GatewayIntentBits.GuildMessages],
        });

        this.commandHandler = new CommandHandler();
        this.eventHandler = new EventHandler(this.client, this.commandHandler);
    }

    public async start(): Promise<void> {
        try {
            console.log("üîç V√©rification et cr√©ation de la base de donn√©es si n√©cessaire...");
            await initDatabase(this.dbName);
            console.log("‚úÖ Base de donn√©es v√©rifi√©e ou cr√©√©e avec succ√®s.");

            console.log("üîÑ Connexion √† la base de donn√©es...");
            await sequelize.authenticate();
            console.log("‚úÖ Connexion √† la base de donn√©es r√©ussie.");

            console.log("üì¶ Synchronisation des mod√®les avec la base de donn√©es...");
            await sequelize.sync({ alter: true });
            console.log("‚úÖ Synchronisation des mod√®les termin√©e.");

            console.log("‚è≥ Chargement des t√¢ches cron...");
            await loadCronJobs();
            console.log("‚úÖ T√¢ches cron charg√©es.");

            console.log("ü§ñ Connexion du bot Discord...");
            await this.client.login(config.discord.token);
            console.log("‚úÖ Bot connect√© avec succ√®s !");
        } catch (error) {
            console.error("‚ùå Erreur au d√©marrage :", error);
            process.exit(1);
        }
    }
}